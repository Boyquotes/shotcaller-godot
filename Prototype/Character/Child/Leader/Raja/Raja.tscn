[gd_scene load_steps=15 format=2]

[ext_resource path="res://Character/Child/Leader/Leader.tscn" type="PackedScene" id=1]
[ext_resource path="res://Assets/Character/Leader/Raja/Raja_Blue.png" type="Texture" id=2]
[ext_resource path="res://Character/Child/Leader/Raja/Raja.gd" type="Script" id=3]
[ext_resource path="res://Assets/Character/Leader/Raja/Raja_Red.png" type="Texture" id=4]
[ext_resource path="res://Character/FSM/Movement/Idle.tscn" type="PackedScene" id=5]

[sub_resource type="GDScript" id=21]
script/source = "tool
extends State


# FUNCTIONS AVAILABLE TO INHERIT

func _on_enter(_args) -> void:
	pass

func _after_enter(_args) -> void:
	pass

func _on_update(_delta) -> void:
	pass

func _after_update(_delta) -> void:
	pass

func _before_exit(_args) -> void:
	pass

func _on_exit(_args) -> void:
	pass

func _on_timeout(_name) -> void:
	pass
"

[sub_resource type="GDScript" id=22]
script/source = "tool
extends State


# FUNCTIONS AVAILABLE TO INHERIT

func _on_enter(_args) -> void:
	pass

func _after_enter(_args) -> void:
	pass

func _on_update(_delta) -> void:
	pass

func _after_update(_delta) -> void:
	pass

func _before_exit(_args) -> void:
	pass

func _on_exit(_args) -> void:
	pass

func _on_timeout(_name) -> void:
	pass
"

[sub_resource type="Animation" id=3]
resource_name = "Idle"
length = 0.4
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureContainer/Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.2 ),
"transitions": PoolRealArray( 1, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 1.09442 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("TextureContainer/Sprite:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0 ),
"transitions": PoolRealArray( 1 ),
"update": 0,
"values": [ 0.0 ]
}

[sub_resource type="Animation" id=2]
resource_name = "Walk"
length = 0.3
loop = true
tracks/0/type = "value"
tracks/0/path = NodePath("TextureContainer/Sprite:scale")
tracks/0/interp = 1
tracks/0/loop_wrap = true
tracks/0/imported = false
tracks/0/enabled = true
tracks/0/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ Vector2( 1, 1 ), Vector2( 1, 0.958114 ), Vector2( 0.978999, 1.07022 ) ]
}
tracks/1/type = "value"
tracks/1/path = NodePath("TextureContainer/Sprite:rotation_degrees")
tracks/1/interp = 1
tracks/1/loop_wrap = true
tracks/1/imported = false
tracks/1/enabled = true
tracks/1/keys = {
"times": PoolRealArray( 0, 0.1, 0.2 ),
"transitions": PoolRealArray( 1, 0.5, 1 ),
"update": 0,
"values": [ 0.0, 6.51225, -4.71433 ]
}

[sub_resource type="Shader" id=9]
code = "shader_type canvas_item;
render_mode blend_premul_alpha;

// This shader only works properly with premultiplied alpha blend mode
uniform float aura_width = 2.0;
uniform vec4 aura_color : hint_color;

void fragment() {
	vec4 col = texture(TEXTURE, UV);
	vec2 ps = TEXTURE_PIXEL_SIZE;
	float a;
	float maxa = col.a;
	float mina = col.a;

	a = texture(TEXTURE, UV + vec2(0.0, -aura_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(0.0, aura_width) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(-aura_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	a = texture(TEXTURE, UV + vec2(aura_width, 0.0) * ps).a;
	maxa = max(a, maxa);
	mina = min(a, mina);

	col.rgb *= col.a;

	COLOR = col;
	COLOR.rgb += aura_color.rgb * (maxa - mina);
}"

[sub_resource type="ShaderMaterial" id=10]
resource_local_to_scene = true
shader = SubResource( 9 )
shader_param/aura_width = 0.0
shader_param/aura_color = Color( 1, 1, 1, 1 )

[sub_resource type="CircleShape2D" id=11]
radius = 7.0

[sub_resource type="RectangleShape2D" id=12]
extents = Vector2( 12.5, 16.5 )

[sub_resource type="CircleShape2D" id=14]
resource_local_to_scene = true
radius = 100.0

[node name="Raja" instance=ExtResource( 1 )]
collision_mask = 1
script = ExtResource( 3 )
blue_team_texture = ExtResource( 2 )
red_team_texture = ExtResource( 4 )

[node name="Stats" parent="." index="0"]
team = 2
unit_type = 1
health = 80
max_health = 100
mana = 50
max_mana = 100
movement_speed = 50
attack_range = 20
unit_detection_range = 100

[node name="Live" parent="StateRoot" index="0"]
script = SubResource( 21 )

[node name="Idle" parent="StateRoot/Live/Movement/Idles" index="0" instance=ExtResource( 5 )]
fsm_owner = null
animation_player = null

[node name="Dead" parent="StateRoot" index="1"]
script = SubResource( 22 )

[node name="BehaviorAnimPlayer" parent="." index="3"]
anims/Idle = SubResource( 3 )
anims/Walk = SubResource( 2 )

[node name="HealthBar" parent="HUD" index="0"]
margin_top = -34.0
margin_bottom = -34.0

[node name="TextureContainer" parent="." index="7"]
self_modulate = Color( 1, 1, 1, 0 )

[node name="Sprite" parent="TextureContainer" index="0"]
material = SubResource( 10 )
texture = ExtResource( 2 )
offset = Vector2( 3, -15 )

[node name="DebugContainer" parent="." index="8"]
self_modulate = Color( 1, 1, 1, 0 )
z_index = -10
z_as_relative = false

[node name="AttackRange" parent="DebugContainer" index="0"]
radius = 20

[node name="UnitDetectionRange" parent="DebugContainer" index="1"]
radius = 100

[node name="StateDebug" parent="DebugContainer" index="2"]
position = Vector2( 0, -45 )

[node name="CollisionShape2D" parent="." index="9"]
position = Vector2( 0, -2 )
shape = SubResource( 11 )

[node name="CollisionShape2D" parent="UnitSelector" index="0"]
position = Vector2( 0.5, -16.5 )
shape = SubResource( 12 )

[node name="UnitDetector" parent="." index="11"]
collision_mask = 1

[node name="CollisionShape2D" parent="UnitDetector" index="0"]
shape = SubResource( 14 )

[editable path="UnitSelector"]
