[gd_resource type="ShaderMaterial" load_steps=2 format=2]

[sub_resource type="Shader" id=2]
code = "shader_type canvas_item;

uniform float speed = 1.0;
uniform float frequency_x = 0.0;
uniform float frequency_y = 0.0;
uniform float amplitude_x = 0.0;
uniform float amplitude_y = 0.0;
uniform float distortion_x = 0.0;
uniform float distortion_y = 0.0;

uniform vec4 origin:hint_color;
uniform vec4 origin2:hint_color;
uniform vec4 origin3:hint_color;
uniform vec4 new:hint_color;
uniform vec4 new2:hint_color;
uniform vec4 new3:hint_color;

uniform float tolerance;

void fragment() {
	vec4 current_pixel = texture(TEXTURE, UV);
	vec4 new_pixel = current_pixel;
	if (length(current_pixel - origin) < tolerance)
		new_pixel = new;
	if (length(current_pixel - origin2) < tolerance)
		new_pixel = new2;
	if (length(current_pixel - origin3) < tolerance)
		new_pixel = new3;
	COLOR = new_pixel;
}

void vertex() {
	VERTEX.y += sin((UV.x * distortion_y - TIME * speed) * frequency_y) * amplitude_y * UV.x;
	VERTEX.x += cos((UV.y * distortion_x - TIME * speed) * frequency_x) * amplitude_x * UV.x;
}"

[resource]
resource_name = "flag"
shader = SubResource( 2 )
shader_param/speed = 1.0
shader_param/frequency_x = 0.0
shader_param/frequency_y = 7.0
shader_param/amplitude_x = 0.0
shader_param/amplitude_y = 3.0
shader_param/distortion_x = 0.0
shader_param/distortion_y = 11.0
shader_param/origin = Color( 0.305882, 0.388235, 0.52549, 1 )
shader_param/origin2 = Color( 0.32549, 0.584314, 0.709804, 1 )
shader_param/origin3 = Color( 0.47451, 0.803922, 0.819608, 1 )
shader_param/new = Color( 0.537255, 0.317647, 0.4, 1 )
shader_param/new2 = Color( 0.843137, 0.396078, 0.396078, 1 )
shader_param/new3 = Color( 0.929412, 0.627451, 0.568627, 1 )
shader_param/tolerance = 0.1
